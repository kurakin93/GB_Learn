# Задание Пример
# Задача 16: Требуется вычислить, сколько раз встречается некоторое
# число X в массиве A[1..N]. Пользователь в первой строке вводит
# натуральное число N – количество элементов в массиве. В последующих
# строках записаны N целых чисел Ai
# . Последняя строка содержит число X
# 5
# 1 2 3 4 5
# 3 -> 1

# n = int(input())
# list_1 = []
# for i in range(1, n):
#     list_1.append(i*5)
# print(list_1)
# m = int(input())
# print(list_1.count(m))


# Задача 18: Требуется найти в массиве A[1..N] самый близкий по
# величине элемент к заданному числу X. Пользователь в первой строке
# вводит натуральное число N – количество элементов в массиве. В
# последующих строках записаны N целых чисел Ai
# . Последняя строка
# содержит число X
# 5
# 1 2 3 4 5
# 6 -> 5


# n = int(input('N '))
# x = int(input('X '))
n = 30
x = 100
list_1 = []
temp = 0
for i in range(1, n):
    list_1.append(i*3)
print(list_1)
for k in range(0, n-1):
    temp = min(abs(list_1[k] - x))
print(k)










# Задача 20: В настольной игре Скрабл (Scrabble) каждая буква имеет определенную
# ценность. В случае с английским алфавитом очки распределяются так:
# ● A, E, I, O, U, L, N, S, T, R – 1 очко;
# ● D, G – 2 очка;
# ● B, C, M, P – 3 очка;
# ● F, H, V, W, Y – 4 очка;
# ● K – 5 очков;
# ● J, X – 8 очков;
# ● Q, Z – 10 очков.
#
# А русские буквы оцениваются так:
#
# ● А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# ● Д, К, Л, М, П, У – 2 очка;
# ● Б, Г, Ё, Ь, Я – 3 очка;
# ● Й, Ы – 4 очка;
# ● Ж, З, Х, Ц, Ч – 5 очков;
# ● Ш, Э, Ю – 8 очков;
# ● Ф, Щ, Ъ – 10 очков.
# Напишите программу, которая вычисляет стоимость введенного пользователем слова.
# Будем считать, что на вход подается только одно слово, которое содержит либо только
# английские, либо только русские буквы.


# import re
# name = input().lower()
# points_eng = {1: 'aeiolnstr',
#               2: 'dg',
#               3: 'bcmp',
#               4: 'fhvwy',
#               5: 'k',
#               8: 'jx',
#               10: 'qz'}
#
# points_rus = {1: 'авеинорст',
#               2: 'дклмпу',
#               3: 'бгёья',
#               4: 'йы',
#               5: 'жзхцч',
#               6: 'шэю',
#               7: 'фщъ'}
# def points_ru(text):
#     temp = 0
#     for i in text:
#         for j in points_rus:
#             for k in points_rus[j]:
#                 if i == k:
#                     temp += j
#                     return temp
#
# def points_en(text):
#     temp = 0
#     for i in text:
#         for j in points_eng:
#             for k in points_eng[j]:
#                 if i == k:
#                     temp += j
#                     return temp
#
# if bool(re.search('[а-яА-Я]', name)):
#     print(points_ru(name))
# else:
#     print(points_en(name))
